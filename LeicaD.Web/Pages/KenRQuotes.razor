@page "/kenrquotes"
@attribute [Authorize(Roles = "Admin, Mod, BotMod")]
@using LeicaD.Web.Data
@inject KenRQuoteService KenRQuoteService
@inject IJSRuntime JsRuntime

<h2>Ken R. Quote Manager</h2>
<AuthorizeView Roles="Admin, BotMod" Context="authContext">
    <h5>Add</h5>
    <EditForm Model="@quote" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <InputTextArea id="quote" @bind-Value="quote.Quote" style="width:100%" /><br />
        <button type="submit">Add</button>
    </EditForm><br />
</AuthorizeView>
<h5>List</h5>
<table>
    <thead>
        <tr>
            <td>Id</td>
            <td>Last Posted</td>
            <td></td>
            <td>Quote</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var q in quotes)
        {
            <tr>
                <td>@q.Id</td>
                <td>@q.LastPosted</td>
                <td><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                    class="bi bi-trash-fill" viewBox="0 0 16 16">
                        <path
                        d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z"
                        @onclick="() => DeleteQuote(q)" />
                    </svg></td>
                <td>@q.Quote</td>
            </tr>
        }
    </tbody>
</table>
@quotes.Count() quotes total.
@code {
    private KenRQuote[] quotes;
    private KenRQuote quote = new KenRQuote();

    private async void HandleValidSubmit()
    {
        await KenRQuoteService.AddQuoteAsync(quote);
        quote = new KenRQuote();
        await LoadData();
    }
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task DeleteQuote(KenRQuote q)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            await KenRQuoteService.DeleteQuoteAsync(q);
            await LoadData();
        }
    }

    private async Task LoadData()
    {
        quotes = await KenRQuoteService.GetQuotesAsync();
        StateHasChanged();
    }
}
